labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.4) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.4) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
descdist(DPH_chronic_top$proportion)
fit.gamma <- fitdist(DPH_chronic_top$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_top)
backward.chronic_top <- stepAIC(chronic_top.mod, direction = "backward", trace = F)
formula(backward.chronic_top) # get the final formula , proportion ~ treatment +time_min
backward.chronic_top$anova
summary(backward.chronic_top)
descdist(DPH_chronic_bottom$proportion)
fit.gamma <- fitdist(DPH_chronic_bottom$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_bottom$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_bottom$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_bottom$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_bottom.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_bottom)
backward.chronic_bottom <- stepAIC(chronic_bottom.mod, direction = "backward", trace = F)
formula(backward.chronic_bottom) # get the final formula , proportion ~ treatment +time_min
backward.chronic_bottom$anova
summary(backward.chronic_bottom)
descdist(DPH_chronic_top$proportion)
fit.gamma <- fitdist(DPH_chronic_top$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_top)
backward.chronic_top <- stepAIC(chronic_top.mod, direction = "backward", trace = F)
formula(backward.chronic_top) # get the final formula , proportion ~ treatment +time_min
backward.chronic_top$anova
summary(backward.chronic_top)
descdist(DPH_chronic_bottom$proportion)
fit.gamma <- fitdist(DPH_chronic_bottom$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_bottom$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_bottom$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_bottom$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_bottom.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_bottom)
backward.chronic_bottom <- stepAIC(chronic_bottom.mod, direction = "backward", trace = F)
formula(backward.chronic_bottom) # get the final formula , proportion ~ treatment +time_min
backward.chronic_bottom$anova
summary(backward.chronic_bottom)
descdist(DPH_acute_bottom$proportion)
fit.gamma <- fitdist(DPH_acute_bottom$proportion, "gamma")
fit.beta <- fitdist(DPH_acute_bottom$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_acute_bottom$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_acute_bottom$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
acute_bottom.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_acute_bottom)
backward.acute_bottom <- stepAIC(acute_bottom.mod, direction = "backward", trace = F)
formula(backward.acute_bottom) # get the final formula , proportion ~ treatment + time_min
backward.acute_bottom$anova
summary(backward.acute_bottom)
descdist(DPH_acute_top$proportion)
fit.gamma <- fitdist(DPH_acute_top$proportion, "gamma")
fit.beta <- fitdist(DPH_acute_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_acute_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_acute_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
acute_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_acute_top)
backward.acute_top <- stepAIC(acute_top.mod, direction = "backward", trace = F)
formula(backward.acute_top) # get the final formula , proportion ~ treatment + time_min
backward.acute_top$anova
summary(backward.acute_top)
fitDist(proportion, data = lorazepam_top, type = "realAll", try.gamlss = T) # SHASH distribution
histDist(lorazepam_top$proportion, "SHASH", density = T)
lo_top.mod <- gamlss(proportion ~ treatment + time_min + treatment:time_min, family = SHASH(), data = lorazepam_top, method = CG())
summary(lo_top.mod)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
fitDist(proportion, data = lorazepam_top, type = "realAll", try.gamlss = T) # SHASH distribution
histDist(lorazepam_top$proportion, "SHASH", density = T)
lo_top.mod <- gamlss(proportion ~ treatment + time_min + treatment:time_min, family = SHASH(), data = lorazepam_top, method = CG())
summary(lo_top.mod)
fitDist(proportion, data = lorazepam_bottom, type = "realAll", try.gamlss = T) # SHASH distribution
histDist(lorazepam_bottom$proportion, "SHASH", density = T)
lo_bottom.mod <- gamlss(proportion ~ treatment + time_min + treatment:time_min, family = SHASH(), data = lorazepam_bottom, method = CG())
summary(lo_bottom.mod)
descdist(DPH_acute_top$proportion)
fit.gamma <- fitdist(DPH_acute_top$proportion, "gamma")
fit.beta <- fitdist(DPH_acute_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_acute_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_acute_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
acute_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_acute_top)
backward.acute_top <- stepAIC(acute_top.mod, direction = "backward", trace = F)
formula(backward.acute_top) # get the final formula , proportion ~ treatment + time_min
backward.acute_top$anova
summary(backward.acute_top)
data = read_csv(here("./Data/DS copepod data - Untitled spreadsheet - Sheet1 (1).csv"))
data = read_csv(here("./Data/Untitled spreadsheet - Sheet1 (1).csv"))
ggplot(DPH_chronic, aes(x = treatment, y = proportion, fill = treatment)) +
geom_boxplot(alpha = 0.8) +
labs(x = "Treatment", y = "Proportion of copepods") +
theme_classic() +
labs(fill = "Treatment") +
scale_fill_discrete(name = "Treatment", labels = c("Control", "Environmentally relevant", "High"))
library(FSA)
library(fGarch)
library(LambertW)
library(patchwork)
library(here)
library(tidyverse)
ggplot(DPH_chronic, aes(x = treatment, y = proportion, fill = treatment)) +
geom_boxplot(alpha = 0.8) +
labs(x = "Treatment", y = "Proportion of copepods") +
theme_classic() +
labs(fill = "Treatment") +
scale_fill_discrete(name = "Treatment", labels = c("Control", "Environmentally relevant", "High"))
ggplot(DPH_acute, aes(x = treatment, y = proportion, fill = treatment)) +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Treatment", y = "Proportion of copepods") +
labs(fill = "Treatment") +
scale_fill_discrete(name = "Treatment", labels = c("Control", "Environmentally relevant", "High"))
ggplot(DPH_chronic, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
# Reading in all the data files. We imported the complete data files and the top and bottom covered sections individually
lorazepam = read_csv(here("./Data/DS copepod data - Lorazepam acute.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
lorazepam_bottom= read_csv(here("./Data/DS copepod data - Lorazepam_bottom.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
lorazepam_top = read_csv(here("./Data/DS copepod data - Lorazepam_top.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
DPH_acute = read_csv(here("./Data/DS copepod data - DPH acute_right one.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
DPH_acute_bottom = read_csv(here("./Data/DS copepod data - DPH acute_bottom.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
DPH_acute_top = read_csv(here("./Data/DS copepod data - DPH acute_top.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
DPH_chronic = read_csv(here("./Data/DS copepod data - DPH chronic.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
DPH_chronic_top = read_csv(here("./Data/DS copepod data - DPH chronic_top.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
DPH_chronic_bottom = read_csv(here("./Data/DS copepod data - DPH chronic_bottom.csv")) %>%
mutate(percentile = as.factor(percentile), time_min = as.factor(time_min))
#Graphs for the each treatment. The overall proportion of copepods combining both the top and bottom coverage and seperate graphs showing the proportion of copepods when just the top or the bottom of the tube was covered.
ggplot(DPH_chronic, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.4) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.4) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_discrete(name = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
#Graphs for the each treatment. The overall proportion of copepods combining both the top and bottom coverage and seperate graphs showing the proportion of copepods when just the top or the bottom of the tube was covered.
ggplot(DPH_chronic, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_chronic_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.4) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(DPH_acute_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.4) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_top, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
ggplot(lorazepam_bottom, aes(x = time_min, y = proportion, fill = treatment), xlab="Time (min)", ylab="Proportion of copepods") +
geom_boxplot(alpha = 0.8) +
theme_classic() +
labs(x = "Time (min)", y = "Proportion of copepods") +
labs(fill = "Treatment") +
ylim(0, 0.8) +
scale_fill_manual(labels = c("Control", "Environmentally relevant", "High"), values = c("skyblue1", "palegreen3", "firebrick1"))
# Initial tests for the chronic DPH exposure
shapiro.test(DPH_chronic$proportion) #p-value < 2.2e-16 (violates assumption)
bartlett.test(proportion ~ treatment, data = DPH_chronic) #p-value < 2.2e-16 (violates)
kruskal.test(proportion ~ treatment, data = DPH_chronic) #p-value = 0.0006316
dunnTest(proportion ~ treatment, data = DPH_chronic)
# Initial tests for the acute DPH exposure
shapiro.test(DPH_acute$proportion) #p-value = 1.958e-07 (violates assumption)
bartlett.test(proportion ~ treatment, data = DPH_acute) #p-value = 6.849e-06 (violates
kruskal.test(proportion ~ treatment, data = DPH_acute) #p-value = 0.0006316
dunnTest(proportion ~ treatment, data = DPH_acute)
# Testing for the best distribution fit for DPH chronic exposure when the top section was covered and running the model using the backwards selection
descdist(DPH_chronic_top$proportion)
fit.gamma <- fitdist(DPH_chronic_top$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_top)
backward.chronic_top <- stepAIC(chronic_top.mod, direction = "backward", trace = F)
formula(backward.chronic_top) # get the final formula , proportion ~ treatment +time_min
backward.chronic_top$anova
summary(backward.chronic_top)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
# Testing for the best distribution fit for DPH chronic exposure when the top section was covered and running the model using the backwards selection
descdist(DPH_chronic_top$proportion)
fit.gamma <- fitdist(DPH_chronic_top$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_top)
backward.chronic_top <- stepAIC(chronic_top.mod, direction = "backward", trace = F)
formula(backward.chronic_top) # get the final formula , proportion ~ treatment +time_min
backward.chronic_top$anova
summary(backward.chronic_top)
# Testing for the best distribution fit for DPH chronic exposure when the bottom section was covered and running the model using the backwards selection
descdist(DPH_chronic_bottom$proportion)
fit.gamma <- fitdist(DPH_chronic_bottom$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic_bottom$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic_bottom$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic_bottom$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic_bottom.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic_bottom)
backward.chronic_bottom <- stepAIC(chronic_bottom.mod, direction = "backward", trace = F)
formula(backward.chronic_bottom) # get the final formula , proportion ~ treatment +time_min
backward.chronic_bottom$anova
summary(backward.chronic_bottom)
# Testing for the best distribution fit for overall chronic DPH exposure and running the model using the backwards selection
descdist(DPH_chronic$proportion)
fit.gamma <- fitdist(DPH_chronic$proportion, "gamma")
fit.beta <- fitdist(DPH_chronic$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_chronic$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_chronic$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
chronic.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_chronic)
backward.chronic <- stepAIC(chronic.mod, direction = "backward", trace = F)
formula(backward.chronic) # get the final formula , proportion ~ treatment +time_min
backward.chronic$anova
summary(backward.chronic)
# Testing for the best distribution fit for the overall DPH acute exposure and running the model using the backwards selection
descdist(DPH_acute$proportion)
fit.gamma <- fitdist(DPH_acute$proportion, "gamma")
fit.beta <- fitdist(DPH_acute$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_acute$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_acute$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
acute.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_acute)
backward.acute <- stepAIC(acute.mod, direction = "backward", trace = F)
formula(backward.acute) # get the final formula , proportion ~ treatment + time_min
backward.acute$anova
summary(backward.acute)
# Testing for the best distribution fit for DPH acute exposure when the bottom section was covered and running the model using the backwards selection
descdist(DPH_acute_bottom$proportion)
fit.gamma <- fitdist(DPH_acute_bottom$proportion, "gamma")
fit.beta <- fitdist(DPH_acute_bottom$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_acute_bottom$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_acute_bottom$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
acute_bottom.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_acute_bottom)
backward.acute_bottom <- stepAIC(acute_bottom.mod, direction = "backward", trace = F)
formula(backward.acute_bottom) # get the final formula , proportion ~ treatment + time_min
backward.acute_bottom$anova
summary(backward.acute_bottom)
# Testing for the best distribution fit for DPH acute exposure when the top section was covered and running the model using the backwards selection
descdist(DPH_acute_top$proportion)
fit.gamma <- fitdist(DPH_acute_top$proportion, "gamma")
fit.beta <- fitdist(DPH_acute_top$proportion, "beta")
plot(fit.gamma)
plot(fit.beta)
mGA <- histDist(DPH_acute_top$proportion, "GA", density = T, main = "Gamma")
mBE <- histDist(DPH_acute_top$proportion, "BE", density = T, main = "Beta")
GAIC(mGA, mBE)
acute_top.mod <- glm(proportion ~ treatment + time_min + treatment:time_min, family = Gamma(link = "inverse"), data = DPH_acute_top)
backward.acute_top <- stepAIC(acute_top.mod, direction = "backward", trace = F)
formula(backward.acute_top) # get the final formula , proportion ~ treatment + time_min
backward.acute_top$anova
summary(backward.acute_top)
# automatic distribution fitting with fitDist for lorazepam and running the model
fitDist(proportion, data = lorazepam, type = "realAll", try.gamlss = T) # SHASH distribution
histDist(lorazepam$proportion, "SHASH", density = T)
lo.mod <- gamlss(proportion ~ treatment + time_min + treatment:time_min, family = SHASH(), data = lorazepam, method = CG())
summary(lo.mod)
# automatic distribution fitting with fitDist for lorazepam when the bottom section was covered and running the model
fitDist(proportion, data = lorazepam_bottom, type = "realAll", try.gamlss = T) # SHASH distribution
histDist(lorazepam_bottom$proportion, "SHASH", density = T)
lo_bottom.mod <- gamlss(proportion ~ treatment + time_min + treatment:time_min, family = SHASH(), data = lorazepam_bottom, method = CG())
summary(lo_bottom.mod)
# automatic distribution fitting with fitDist for lorazepam when the top section was covered and running the model
fitDist(proportion, data = lorazepam_top, type = "realAll", try.gamlss = T) # SHASH distribution
histDist(lorazepam_top$proportion, "SHASH", density = T)
lo_top.mod <- gamlss(proportion ~ treatment + time_min + treatment:time_min, family = SHASH(), data = lorazepam_top, method = CG())
summary(lo_top.mod)
